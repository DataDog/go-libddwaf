name: Test (Containerized)
on:
  workflow_call: # This is called by test.yml

jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        image:
          # Standard golang images
          - golang:{0}-alpine
          - golang:{0}-bookworm
          - golang:{0}-bullseye
          - golang:{0}-buster
          # RPM-based image
          - amazonlinux:2 # pretty popular on AWS workloads
        arch: [ amd64, arm64 ]
        go-version: [ "1.22", "1.21", "1.20", "1.19" ]
        include:
          # Test with DD_APPSEC_WAF_LOG_LEVEL (only latest go, without any particular tag)
          - go-version: '1.22'
            waf-log-level: TRACE
        exclude:
          # Test arm64 on a subset of the matrix for now to make it quicker to run due to qemu
          - arch: arm64
            image: golang:{0}-buster
          - arch: arm64
            image: golang:{0}-bullseye
          # Prune inexistent build images (debian buster is on LTS but won't get new go version images)
          - go-version: '1.21'
            image: golang:{0}-buster
           # Prune inexistent build images (debian buster is on LTS but won't get new go version images)
          - go-version: '1.22'
            image: golang:{0}-buster
          # The amazonlinux:2 variant is only relevant for the default go version yum ships (currently 1.20)
          - go-version: '1.19'
            image: amazonlinux:2
          - go-version: '1.21'
            image: amazonlinux:2
          - go-version: '1.22'
            image: amazonlinux:2
    name: ${{ toJSON(matrix) }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v4
        with:
          path: ~/go/pkg/mod
          key: go-pkg-mod-${{ hashFiles('**/go.sum') }}
          restore-keys: go-pkg-mod-
      - name: Set up QEMU
        if: matrix.arch == 'arm64'
        uses: docker/setup-qemu-action@v3
        with:
          platforms: arm64
      - name: Create container
        id: container
        run: |-
          docker run --name gha-${{ github.run_id }} --rm -di                   \
            --platform="linux/${{ matrix.arch }}"                               \
            -v "${HOME}/go/pkg/mod:/go/pkg/mod"                                 \
            -v "$PWD:$PWD"                                                      \
            -w "$PWD"                                                           \
            -eDD_APPSEC_WAF_LOG_LEVEL="${{ matrix.waf-log-level }}"             \
            -eGOMODCACHE="/go/pkg/mod"                                          \
            "${{ format(matrix.image, matrix.go-version) }}"
      - name: Install AmazonLinux 2 requirements
        if: matrix.image == 'amazonlinux:2'
        run: |-
          docker exec -i gha-${{ github.run_id }}                               \
            yum install -y golang
      - name: Run the ci.sh script
        run: |-
          docker exec -i gha-${{ github.run_id }} $PWD/.github/workflows/ci.sh
      - name: Stop container
        if: always() && steps.container.outcome == 'success'
        run: |-
          docker stop gha-${{ github.run_id }}
