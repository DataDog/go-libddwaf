name: Test (Bare Metal)
on:
  workflow_call: # This is called by test.yml

jobs:
  go-versions-matrix:
    name: Determine Go Versions to test
    runs-on: ubuntu-latest
    outputs:
      json: ${{ steps.matrix.outputs.json }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Setup Go
        uses: actions/setup-go@f111f3307d8850f501ac008e886eec1fd1932a34 # v5.3.0
        with:
          go-version: stable
          cache: true
          cache-dependency-path: '**/go.mod'
      - name: Compute Matrix
        id: matrix
        run: |-
          echo -n "json="                           >> "${GITHUB_OUTPUT}"
          go -C _tools/golang-versions-matrix run . >> "${GITHUB_OUTPUT}"

  test:
    needs: go-versions-matrix
    strategy:
      fail-fast: false
      matrix:
        runs-on: [ macos-26, macos-latest-large, macos-13, ubuntu-24.04, ubuntu-22.04, windows-latest, ubuntu-24.04-arm ]
        go-version: ${{ fromJson(needs.go-versions-matrix.outputs.json) }}
        include:
          # Test with DD_APPSEC_WAF_LOG_LEVEL (only latest go version)
          - go-version: stable
            waf-log-level: TRACE
    name: ${{ matrix.runs-on }} ${{ matrix.go-version }}${{ matrix.waf-log-level && format(' (DD_APPSEC_WAF_LOG_LEVEL={0})', matrix.waf-log-level) || '' }}
    runs-on: ${{ matrix.runs-on }}
    steps:
      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4.3.0
      - uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5.5.0
        with:
          go-version: ${{ matrix.go-version }}
          cache: true
          cache-dependency-path: "**/go.mod"
      # ARM runners (at least during early access) don't have GCC installed
      - if: matrix.runs-on == 'arm-4core-linux'
        name: Install build requirements (ARM only)
        run: sudo apt update && sudo apt install -y build-essential
      - name: Install gotestsum
        run: go install gotest.tools/gotestsum@latest
      - name: Generate a GitHub token
        id: generate-token
        uses: actions/create-github-app-token@df432ceedc7162793a195dd1713ff69aefc7379e # v2.0.6
        with:
          app-id: ${{ vars.DD_K9_LIBRARY_GO_APP_ID }}
          private-key: ${{ secrets.DD_K9_LIBRARY_GO_APP_PRIVATE_KEY }}
          owner: DataDog
          repositories: appsec-event-rules
          permission-contents: read
      - name: go test
        shell: bash
        run: ./.github/workflows/ci.sh
        env:
          DD_APPSEC_WAF_LOG_LEVEL: ${{ matrix.waf-log-level }}
          # We need a GITHUB_TOKEN in order to access the latest release of the AppSec rules from
          # the DataDog/appsec-rules repository.
          GITHUB_TOKEN: ${{ steps.generate-token.outputs.token }}
